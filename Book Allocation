class Solution 
{
    public:
    //Function to find minimum number of pages.
    long long allocatedPages(int A[], int N, int M, int mid){
        int studentcount = 1;
        int pageSum = 0;
        for(int i=0; i<N; i++){
            if(pageSum + A[i] <= mid){
                pageSum += A[i];
            }
            else{
                studentcount++;
                if(studentcount > M || A[i] > mid){
                    return false;
                }
                pageSum = A[i];
            }
        }
        return true;
    }
    int findPages(int A[], int N, int M) 
    {
        //code here
        if(M > N){
            return -1;
        }
        int min = 0;
        int sum = 0;
        for(int i=0; i<N; i++){
            sum = sum + A[i];
        }
        int max = sum;
        int mid = min + (max - min)/2;
        int ans = -1;
        while(min<=max){
            if(allocatedPages(A, N, M, mid)){
                ans = mid;
                max = mid-1;
            }
            else{
                min = mid + 1;
            }
            mid = min + (max - min)/2;
        }
        return ans;
    }
};
